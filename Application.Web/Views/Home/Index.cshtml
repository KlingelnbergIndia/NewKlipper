@model EmployeeViewModel
@{
    ViewData["Title"] = "Home Page";
    var TotalDeficitOrExtraHours = @Model.employeeAttendaceRecords.TotalDeficitOrExtraHours;
}

<style>
    th, td {
        text-align: center
    }
</style>
<div>
    <form class="panel panel-info form-inline" method="post" action="?searchFilter=AccessEventsByDateRange">
        <div class="panel-heading">
            <label for="from">From</label>
            <input type="date" id="fromDate" name="fromDate" class="form-control input-sm"
                   value=@(Model.fromDate == DateTime.MinValue ? "dd-mm-yyyy": Model.fromDate.ToString("yyyy-MM-dd")) required>
            <label for="to">to</label>
            <input type="date" id="toDate" name="toDate" class="form-control input-sm"
                   value="@(Model.toDate == DateTime.MinValue ? "dd-mm-yyyy": Model.toDate.ToString("yyyy-MM-dd"))" onkeydown="return false" required>
            <button type="submit" class="btn btn-default btn-sm">Show</button>
            <i>&nbsp; @ViewData["resultMessage"]</i>

        </div>
    </form>
    @if (Model.employeeAttendaceRecords.ListOfAttendanceRecordDTO.Count == 0)
    {
        <p>Attendace Records for specified period are not available</p>
    }
    else
    {
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Day</th>
                    <th>Time In</th>
                    <th>Time Out</th>
                    <th>DeficitTime</th>
                    <th>OverTime</th>
                    <th>Total Working Hours</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.employeeAttendaceRecords.ListOfAttendanceRecordDTO)
                {

                    string lateByClass = "alert alert-danger";
                    string overTimeClass = "alert alert-success";

                    <tr>
                        <td style="vertical-align: text-top;">@item.Date.ToString("dd MMMM yyyy")</td>
                        <td>@item.Date.ToString("dddd")</td>
                        <td>@item.TimeIn.Hour.ToString("D2") : @item.TimeIn.Minute.ToString("D2")</td>
                        @if (item.TimeOut.Hour == 0 && item.TimeOut.Minute == 0)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@item.TimeOut.Hour.ToString("D2"):@item.TimeOut.Minute.ToString("D2")</td>
                        }
                        @if (item.LateBy.Hour == 0 && item.LateBy.Minute == 0)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td class="@lateByClass">@item.LateBy.Hour.ToString("D2"):@item.LateBy.Minute.ToString("D2")</td>
                        }
                        @if (item.OverTime.Hour == 0 && item.OverTime.Minute == 0)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td class="@overTimeClass">@item.OverTime.Hour.ToString("D2"):@item.OverTime.Minute.ToString("D2")</td>
                        }
                        <td>@item.WorkingHours.Hour.ToString("D2"):@item.WorkingHours.Minute.ToString("D2")</td>
                    </tr>
                }
            </tbody>
        </table>
        <table class="table table-striped table-bordered" style=" background-color: #f1f1c1">
            <tbody>
                <tr>
                    <td>Total Working Hours</td>
                    <td>
                        @Model.employeeAttendaceRecords.TotalWorkingHours.Hour.ToString("D2") :
                        @Model.employeeAttendaceRecords.TotalWorkingHours.Minute.ToString("D2")
                    </td>
                </tr>
                <tr>
                    <td>Total Deficit Hours</td>
                    @if (@TotalDeficitOrExtraHours.Hour >= 0 || @TotalDeficitOrExtraHours.Minute >= 0)
                    {
                    <td>
                        @Math.Abs(TotalDeficitOrExtraHours.Hour).ToString("D2") :
                        @Math.Abs(TotalDeficitOrExtraHours.Minute).ToString("D2")
                    </td>
                    }
                    else
                    {
                        <td>00:00</td>
                    }

                </tr>
                <tr>
                    <td>Extra Hours</td>
                    @if (@TotalDeficitOrExtraHours.Hour < 0 || @TotalDeficitOrExtraHours.Minute < 0)
                    {
                    <td>
                        @Math.Abs(TotalDeficitOrExtraHours.Hour).ToString("D2") :
                        @Math.Abs(TotalDeficitOrExtraHours.Minute).ToString("D2")
                    </td>
                    }
                    else
                    {
                        <td>00:00</td>
                    }
                </tr>
            </tbody>
        </table>
    }
</div>


