@model ReporteeViewModel
@{
    var SelectedTab = (string)ViewBag.SelectedTab == null ? "attendanceReportMenu" : (string)ViewBag.SelectedTab;

}

<ul class="nav nav-tabs">
    <li class="tab-pane @(@SelectedTab.Equals("attendanceReportMenu") ? "active" : "notactive")"><a data-toggle="tab" href="#attendanceReportMenu"><label>Attendance report</label></a></li>
    <li class="tab-pane @(@SelectedTab.Equals("leaveReportMenu") ? "active" : "notactive")"><a data-toggle="tab" href="#leaveReportMenu"><label>Leave report</label></a></li>
</ul>

<div class="tab-content">
    <div id="attendanceReportMenu" class="tab-pane @(@SelectedTab.Equals("attendanceReportMenu") ? "fade in active" : "")">
        @{await Html.RenderPartialAsync("_AttendanceReportTabContent", @Model);}
    </div>
    <div id="leaveReportMenu" class="tab-pane @(@SelectedTab.Equals("leaveReportMenu") ? "fade in active" : "")">
        @{await Html.RenderPartialAsync("_LeaveReportTabContent", @Model);}
    </div>
</div>
@*tab-pane fade in*@
@*@SelectedTab.Equals("attendanceReportMenu")*@


@section Scripts {
    @{await Html.RenderPartialAsync("_AccessEventsPopup");}
    @{await Html.RenderPartialAsync("_HoursRegularizationPopup");}
}




<style>
    .table td {
        text-align: center;
    }

    .table th {
        text-align: center;
    }

    .panel-heading {
        padding: 10px 0px;
    }

    .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
        background-color: #D9EDF7;
    }
</style>