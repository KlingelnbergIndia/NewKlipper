@model ReporteeViewModel
@{
    var TotalDeficitOrExtraHours = @Model.reporteesAttendaceRecords.TotalDeficitOrExtraHours;
    var EmployeeID = @Model.EmployeeId;
}


<div>
    <div class="panel-info" style="@(Model.reportees.Count==0 ? "visibility:hidden" : "visibility:visible")">
        <div class="panel panel-heading col-md-12 col-sm-12">
            <div class="col-md-8 col-sm-8">
                @using (Html.BeginForm("GetSelectedreportee", "Home", FormMethod.Post))
                {
                    <div class="form-inline" style="margin-top: 0.5%">
                        <div class="form-group">
                            <label for="reporteesId">Select a Reportee</label>
                            <select id="reporteesId" name="selectMenu" class="form-control input-sm">
                                @if (Model.Name == string.Empty || Model.Name == null)
                                {
                                    <option selected value="0" disabled>---Select Reportee---</option>
                                }
                                else
                                {
                                    <option selected value=@Model.Name>@Model.Name</option>
                                }
                                @foreach (var item in Model.reportees)
                                {
                                    if (item != Model.Name)
                                    {
                                        <option value=@item>@item</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="fromDate">From</label>
                            <input type="date" id="fromDate" name="fromDate" class="form-control input-sm"
                                   min="@DateTime.Today.AddYears(-1).ToString("yyyy-MM-dd")"
                                   max="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   value="@(Model.fromDate==DateTime.MinValue ? "dd-mm-yyyy" : Model.fromDate.ToString("yyyy-MM-dd"))" required>
                        </div>
                        <div class="form-group">
                            <label for="toDate">to</label>
                            <input type="date" id="toDate" name="toDate" class="form-control input-sm"
                                   min="@DateTime.Today.AddYears(-1).ToString("yyyy-MM-dd")"
                                   max="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   value="@(Model.toDate==DateTime.MinValue ? "dd-mm-yyyy" : Model.toDate.ToString("yyyy-MM-dd"))" required>
                        </div>
                        <input type="submit" value="Get Attendance Record" class="btn btn-info btn-sm" />
                    </div>
                }
            </div>
            <div class="col-md-4 col-sm-4">
                @if (Model.reporteesAttendaceRecords.TotalWorkingHours != null)
                {
                    <div align="right">
                        <label style="font-weight: normal">Total Working Hours</label>
                        <span style="font-weight: bold">
                            @Model.reporteesAttendaceRecords.TotalWorkingHours.Hour.ToString("D2") :
                            @Model.reporteesAttendaceRecords.TotalWorkingHours.Minute.ToString("D2")
                        </span>
                    </div>
                    <div align="right">
                        @if (TotalDeficitOrExtraHours.Hour >= 0 || TotalDeficitOrExtraHours.Minute >= 0)
                        {
                            <label style="margin-left: 1%; font-weight: normal">Total Deficit Time</label>
                            <span style="margin-left: 2%; font-weight: bold; color: #b84442">
                                @Math.Abs(TotalDeficitOrExtraHours.Hour).ToString("D2") :
                                @Math.Abs(TotalDeficitOrExtraHours.Minute).ToString("D2")
                            </span>
                        }
                        else
                        {
                            <label style="margin-left: 49%; font-weight: normal;">Total Over Time</label>
                            <span style="margin-left: 2%; font-weight: bold;color: #697668">
                                @Math.Abs(TotalDeficitOrExtraHours.Hour).ToString("D2") :
                                @Math.Abs(TotalDeficitOrExtraHours.Minute).ToString("D2")
                            </span>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    @if (Model.Name != string.Empty && Model.Name != null)
    {
        if (Model.reporteesAttendaceRecords.ListOfAttendanceRecordDTO.Count == 0)
        {
            <p class="text-warning">
                Attendance Records of @Model.Name.Substring(0, Model.Name.LastIndexOf('-'))
                for specified period are not available
            </p>
        }
        else
        {
            <p>Attendance Record of @Model.Name.Substring(0, Model.Name.LastIndexOf('-'))</p>

            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Day</th>
                        <th>Time In</th>
                        <th>Time Out</th>
                        <th>Deficit Time</th>
                        <th>Over Time</th>
                        <th>Working Hours</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.reporteesAttendaceRecords.ListOfAttendanceRecordDTO)
                    {
                        string lateByClass = "alert alert-danger";
                        string overTimeClass = "alert alert-success";

                        string nonWorkingDayTextColor = "";

                        @if (item.TimeIn.Hour == 0 && item.TimeIn.Minute == 0 && item.TimeOut.Hour == 0 && item.TimeOut.Minute == 0)
                        {
                            nonWorkingDayTextColor = "rgba(0,0,0,0.5)";
                        }

                        <tr style="color:@nonWorkingDayTextColor">
                            <td style="vertical-align: text-top;">@item.Date.ToString("dd MMMM yyyy")</td>
                            <td>@item.Date.ToString("dddd")</td>

                            @if (item.TimeIn.Hour == 0 && item.TimeIn.Minute == 0)
                            {
                                <td>-</td>
                            }
                            else
                            {
                                <td>@item.TimeIn.Hour.ToString("D2") : @item.TimeIn.Minute.ToString("D2")</td>
                            }

                            @if (item.TimeOut.Hour == 0 && item.TimeOut.Minute == 0)
                            {
                                <td>-</td>
                            }
                            else
                            {
                                <td>@item.TimeOut.Hour.ToString("D2"):@item.TimeOut.Minute.ToString("D2")</td>
                            }

                            @if (item.LateBy.Hour == 0 && item.LateBy.Minute == 0)
                            {
                                <td>-</td>
                            }
                            else
                            {
                                <td class="@lateByClass">@item.LateBy.Hour.ToString("D2"):@item.LateBy.Minute.ToString("D2")</td>
                            }

                            @if (item.OverTime.Hour == 0 && item.OverTime.Minute == 0)
                            {
                                <td>-</td>
                            }
                            else
                            {
                                <td class="@overTimeClass">@item.OverTime.Hour.ToString("D2"):@item.OverTime.Minute.ToString("D2")</td>
                            }

                            @if (item.TimeIn.Hour == 0 && item.TimeIn.Minute == 0 && item.TimeOut.Hour == 0 && item.TimeOut.Minute == 0)
                            {
                                <td>Holiday/Leave</td>
                            }
                            else
                            {
                                <td>
                                    <u class="open-Dialog" data-toggle="modal" onclick=getDailyData('@item.Date.ToString("yyyy-MM-dd")',@EmployeeID) style="cursor:pointer">
                                        @item.WorkingHours.Hour.ToString("D2"):@item.WorkingHours.Minute.ToString("D2")
                                    </u>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }

    }
</div>


<div class="modal fade" id="modal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <input type="hidden" name="showDate" id="showDate" value="" />
                <h4 class="modal-title" id="popupDate"></h4>
            </div>
            <div class="modal-body" id="popupData">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            getDailyData = function (date, employeeId) {
                var convertStringToDateObject = new Date(date);

                $.ajax({
                    type: "GET",
                    url: "AccessPointDetail/",
                    data: {
                        date: dateToYMD(convertStringToDateObject),
                        employeeId: employeeId
                    },
                    dataType: "html",
                    success: function (response) {
                        $("#popupData").html(response);
                        $("#popupDate").html(dateToYMD(convertStringToDateObject));
                        $('#modal').modal({ 'show': true, 'backdrop': true });
                    }
                });
            }

        });

        $(document).ajaxError(function (e, xhr, settings) {
            if (xhr.status == 401) {
                alert("Your Session time expired. Please login again.");
                window.location = "/";
            }
        });

        function dateToYMD(date) {
            try {
                var strArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                var d = date.getDate();
                var m = strArray[date.getMonth()];
                var y = date.getFullYear();
                return '' + (d <= 9 ? '0' + d : d) + ' ' + m + ' ' + y;
            } catch (e) {
                alert('Invalid date');
                return null;
            }
        }

    </script>
}

